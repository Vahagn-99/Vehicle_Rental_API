services:
  app:
    build:
      context: ./docker/app
      dockerfile: Dockerfile
      args:
        TZ: ${WORKSPACE_TIMEZONE}
    restart: unless-stopped
    tty: true
    environment:
      TZ: ${WORKSPACE_TIMEZONE}
    volumes:
      - ./:/var/www
      - ./docker/app/php_additional.ini:/usr/local/etc/php/conf.d/additional.ini
      - ./docker/app/.zshrc:/home/www-data/.zshrc
      - ./docker/app/bin:/home/www-data/bin
      - ~/.ssh:/home/www-data/.ssh:ro
      - ~/.gitconfig:/home/www-data/.gitconfig
    networks:
      - backend-network
      - database-network
      - cache-network
      - queue-network
    depends_on:
      - postgres
      - redis

  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    tty: true
    environment:
      TZ: ${WORKSPACE_TIMEZONE}
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost/ || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/log:/var/log/nginx
    ports:
      - "${NGINX_PORT:-80}:80"
    networks:
      - webserver-network
      - backend-network
    depends_on:
      - app

  postgres:
    image: postgres:alpine
    restart: unless-stopped
    tty: true
    environment:
      TZ: ${WORKSPACE_TIMEZONE}
      POSTGRES_DB: "${DB_DATABASE}"
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - pg-data:/var/lib/postgresql/data/pgdata
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - database-network

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    tty: true
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    volumes:
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-8010}:80"
    networks:
      - database-network
    depends_on:
      - postgres

  redis:
    image: redis:alpine3.18
    restart: unless-stopped
    tty: true
    environment:
      TZ: ${WORKSPACE_TIMEZONE}
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    command: [ "redis-server" ]
    volumes:
      - redis-data:/data
      - ./docker/redis/log:/log
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - cache-network

  rabbitmq:
    image: rabbitmq:management
    restart: unless-stopped
    tty: true
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q check_running" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    networks:
      - queue-network

networks:
  webserver-network:
    driver: bridge
  backend-network:
    driver: bridge
  database-network:
    driver: bridge
  cache-network:
    driver: bridge
  queue-network:
    driver: bridge

volumes:
  pg-data:
    driver: local
  pgadmin-data:
    driver: local
  redis-data:
    driver: local
  rabbitmq-data:
    driver: local